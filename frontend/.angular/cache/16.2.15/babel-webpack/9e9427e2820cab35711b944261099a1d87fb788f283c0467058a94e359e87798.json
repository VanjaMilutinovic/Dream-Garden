{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { LoginComponent as GeneralLoginComponent } from './components/general/login/login.component';\nimport { HomeComponent } from './components/general/home/home.component';\nimport { ProfileComponent as OwnerProfileComponent } from './components/owner/profile/profile.component';\nimport { CompaniesComponent as OwnerCompaniesComponent } from './components/owner/companies/companies.component';\nimport { JobComponent as OwnerJobComponent } from './components/owner/job/job.component';\nimport { MaintenanceComponent as OwnerMaintenanceComponent } from './components/owner/maintenance/maintenance.component';\nimport { ProfileComponent as DecoratorProfileComponent } from './components/decorator/profile/profile.component';\nimport { JobComponent as DecoratorJobComponent } from './components/decorator/job/job.component';\nimport { MaintenanceComponent as DecoratorMaintenanceComponent } from './components/decorator/maintenance/maintenance.component';\nimport { StatisticComponent as DecoratorStatisticComponent } from './components/decorator/statistic/statistic.component';\nimport { LoginComponent as AdminLoginComponent } from './components/admin/login/login.component';\nimport { UsersComponent as AdminUsersComponent } from './components/admin/users/users.component';\nimport { CompaniesComponent as AdminCompaniesComponent } from './components/admin/companies/companies.component';\nimport { CreateWorkerComponent as AdminCreateWorkerComponent } from './components/admin/create-worker/create-worker.component';\nimport { CreateCompanyComponent as AdminCreateCompanyComponent } from './components/admin/create-company/create-company.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'home',\n  component: HomeComponent\n}, {\n  path: 'login',\n  component: GeneralLoginComponent\n},\n// OWNER\n{\n  path: 'owner/profile',\n  component: OwnerProfileComponent\n}, {\n  path: 'owner/companies',\n  component: OwnerCompaniesComponent\n}, {\n  path: 'owne/job',\n  component: OwnerJobComponent\n}, {\n  path: 'owner/maintenance',\n  component: OwnerMaintenanceComponent\n},\n// DECORATOR\n{\n  path: 'decorator/profile',\n  component: DecoratorProfileComponent\n}, {\n  path: 'decorator/job',\n  component: DecoratorJobComponent\n}, {\n  path: 'decorator/maintenance',\n  component: DecoratorMaintenanceComponent\n}, {\n  path: 'decorator/statistic',\n  component: DecoratorStatisticComponent\n},\n// ADMIN\n{\n  path: 'admin/login',\n  component: AdminLoginComponent\n}, {\n  path: 'admin/users',\n  component: AdminUsersComponent\n}, {\n  path: 'admin/companies',\n  component: AdminCompaniesComponent\n}, {\n  path: 'admin/users/createWorker',\n  component: AdminCreateWorkerComponent\n}, {\n  path: 'admin/companies/createCompany',\n  component: AdminCreateCompanyComponent\n},\n// Wildcard route\n{\n  path: '**',\n  redirectTo: 'home'\n}];\nexport class AppRoutingModule {\n  static #_ = this.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forRoot(routes), RouterModule]\n  });\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","LoginComponent","GeneralLoginComponent","HomeComponent","ProfileComponent","OwnerProfileComponent","CompaniesComponent","OwnerCompaniesComponent","JobComponent","OwnerJobComponent","MaintenanceComponent","OwnerMaintenanceComponent","DecoratorProfileComponent","DecoratorJobComponent","DecoratorMaintenanceComponent","StatisticComponent","DecoratorStatisticComponent","AdminLoginComponent","UsersComponent","AdminUsersComponent","AdminCompaniesComponent","CreateWorkerComponent","AdminCreateWorkerComponent","CreateCompanyComponent","AdminCreateCompanyComponent","routes","path","component","redirectTo","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports"],"sources":["C:\\Users\\vamilutinovic\\Documents\\GitHub\\Dream-Garden\\frontend\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent as GeneralLoginComponent } from './components/general/login/login.component';\nimport { HomeComponent } from './components/general/home/home.component';\n\nimport { ProfileComponent as OwnerProfileComponent} from './components/owner/profile/profile.component';\nimport { CompaniesComponent as OwnerCompaniesComponent } from './components/owner/companies/companies.component';\nimport { JobComponent as OwnerJobComponent } from './components/owner/job/job.component';\nimport { MaintenanceComponent as OwnerMaintenanceComponent } from './components/owner/maintenance/maintenance.component';\n\nimport { ProfileComponent as DecoratorProfileComponent } from './components/decorator/profile/profile.component';\nimport { JobComponent as DecoratorJobComponent } from './components/decorator/job/job.component';\nimport { MaintenanceComponent as DecoratorMaintenanceComponent } from './components/decorator/maintenance/maintenance.component';\nimport { StatisticComponent as DecoratorStatisticComponent } from './components/decorator/statistic/statistic.component';\n\nimport { LoginComponent as AdminLoginComponent } from './components/admin/login/login.component';\nimport { UsersComponent as AdminUsersComponent } from './components/admin/users/users.component';\nimport { CompaniesComponent as AdminCompaniesComponent } from './components/admin/companies/companies.component';\nimport { CreateWorkerComponent as AdminCreateWorkerComponent } from './components/admin/create-worker/create-worker.component';\nimport { CreateCompanyComponent as AdminCreateCompanyComponent } from './components/admin/create-company/create-company.component';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: GeneralLoginComponent },\n  // OWNER\n  { path: 'owner/profile', component: OwnerProfileComponent },\n  { path: 'owner/companies', component: OwnerCompaniesComponent },\n  { path: 'owne/job', component: OwnerJobComponent}, \n  { path: 'owner/maintenance', component: OwnerMaintenanceComponent},\n  // DECORATOR\n  { path: 'decorator/profile', component: DecoratorProfileComponent },\n  { path: 'decorator/job', component: DecoratorJobComponent },\n  { path: 'decorator/maintenance', component: DecoratorMaintenanceComponent },\n  { path: 'decorator/statistic', component: DecoratorStatisticComponent },\n  // ADMIN\n  { path: 'admin/login', component: AdminLoginComponent },\n  { path: 'admin/users', component: AdminUsersComponent },\n  { path: 'admin/companies', component: AdminCompaniesComponent },\n  { path: 'admin/users/createWorker', component: AdminCreateWorkerComponent },\n  { path: 'admin/companies/createCompany', component: AdminCreateCompanyComponent },\n  // Wildcard route\n  { path: '**', redirectTo: 'home' } \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,cAAc,IAAIC,qBAAqB,QAAQ,4CAA4C;AACpG,SAASC,aAAa,QAAQ,0CAA0C;AAExE,SAASC,gBAAgB,IAAIC,qBAAqB,QAAO,8CAA8C;AACvG,SAASC,kBAAkB,IAAIC,uBAAuB,QAAQ,kDAAkD;AAChH,SAASC,YAAY,IAAIC,iBAAiB,QAAQ,sCAAsC;AACxF,SAASC,oBAAoB,IAAIC,yBAAyB,QAAQ,sDAAsD;AAExH,SAASP,gBAAgB,IAAIQ,yBAAyB,QAAQ,kDAAkD;AAChH,SAASJ,YAAY,IAAIK,qBAAqB,QAAQ,0CAA0C;AAChG,SAASH,oBAAoB,IAAII,6BAA6B,QAAQ,0DAA0D;AAChI,SAASC,kBAAkB,IAAIC,2BAA2B,QAAQ,sDAAsD;AAExH,SAASf,cAAc,IAAIgB,mBAAmB,QAAQ,0CAA0C;AAChG,SAASC,cAAc,IAAIC,mBAAmB,QAAQ,0CAA0C;AAChG,SAASb,kBAAkB,IAAIc,uBAAuB,QAAQ,kDAAkD;AAChH,SAASC,qBAAqB,IAAIC,0BAA0B,QAAQ,0DAA0D;AAC9H,SAASC,sBAAsB,IAAIC,2BAA2B,QAAQ,4DAA4D;;;AAElI,MAAMC,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAExB;AAAa,CAAE,EAC1C;EAAEuB,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEzB;AAAqB,CAAE;AACnD;AACA;EAAEwB,IAAI,EAAE,eAAe;EAAEC,SAAS,EAAEtB;AAAqB,CAAE,EAC3D;EAAEqB,IAAI,EAAE,iBAAiB;EAAEC,SAAS,EAAEpB;AAAuB,CAAE,EAC/D;EAAEmB,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAElB;AAAiB,CAAC,EACjD;EAAEiB,IAAI,EAAE,mBAAmB;EAAEC,SAAS,EAAEhB;AAAyB,CAAC;AAClE;AACA;EAAEe,IAAI,EAAE,mBAAmB;EAAEC,SAAS,EAAEf;AAAyB,CAAE,EACnE;EAAEc,IAAI,EAAE,eAAe;EAAEC,SAAS,EAAEd;AAAqB,CAAE,EAC3D;EAAEa,IAAI,EAAE,uBAAuB;EAAEC,SAAS,EAAEb;AAA6B,CAAE,EAC3E;EAAEY,IAAI,EAAE,qBAAqB;EAAEC,SAAS,EAAEX;AAA2B,CAAE;AACvE;AACA;EAAEU,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAEV;AAAmB,CAAE,EACvD;EAAES,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAER;AAAmB,CAAE,EACvD;EAAEO,IAAI,EAAE,iBAAiB;EAAEC,SAAS,EAAEP;AAAuB,CAAE,EAC/D;EAAEM,IAAI,EAAE,0BAA0B;EAAEC,SAAS,EAAEL;AAA0B,CAAE,EAC3E;EAAEI,IAAI,EAAE,+BAA+B;EAAEC,SAAS,EAAEH;AAA2B,CAAE;AACjF;AACA;EAAEE,IAAI,EAAE,IAAI;EAAEE,UAAU,EAAE;AAAM,CAAE,CACnC;AAMD,OAAM,MAAOC,gBAAgB;EAAA,QAAAC,CAAA,G;qBAAhBD,gBAAgB;EAAA;EAAA,QAAAE,EAAA,G;UAAhBF;EAAgB;EAAA,QAAAG,EAAA,G;cAHjBhC,YAAY,CAACiC,OAAO,CAACR,MAAM,CAAC,EAC5BzB,YAAY;EAAA;;;2EAEX6B,gBAAgB;IAAAK,OAAA,GAAAC,EAAA,CAAAnC,YAAA;IAAAoC,OAAA,GAFjBpC,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}