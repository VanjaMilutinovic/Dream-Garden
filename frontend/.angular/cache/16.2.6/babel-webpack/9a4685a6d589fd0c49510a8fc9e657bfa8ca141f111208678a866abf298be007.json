{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.path = \"http://localhost:8080/user/\";\n  }\n  getByUserTypeId(userTypeId) {\n    let params = \"?userTypeId=\" + userTypeId;\n    return this.http.get(this.path + \"getByUserTypeId\" + params);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserService","constructor","http","path","getByUserTypeId","userTypeId","params","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\vamilutinovic\\Documents\\GitHub\\Dream-Garden\\frontend\\src\\app\\services\\user\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  path :string = \"http://localhost:8080/user/\";\n\n  getByUserTypeId(userTypeId:number){\n    let params = \"?userTypeId=\"+userTypeId;\n    return this.http.get<any>(this.path+\"getByUserTypeId\" + params);\n  }\n}"],"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,IAAI,GAAW,6BAA6B;EAFJ;EAIxCC,eAAeA,CAACC,UAAiB;IAC/B,IAAIC,MAAM,GAAG,cAAc,GAACD,UAAU;IACtC,OAAO,IAAI,CAACH,IAAI,CAACK,GAAG,CAAM,IAAI,CAACJ,IAAI,GAAC,iBAAiB,GAAGG,MAAM,CAAC;EACjE;EAAC,QAAAE,CAAA,G;qBATUR,WAAW,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXb,WAAW;IAAAc,OAAA,EAAXd,WAAW,CAAAe,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}